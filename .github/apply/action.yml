# .github/apply/action.yml

name: "Terraform setup and apply"
description: "Applies a terraform plan file from S3"
inputs:
  terraform_directory: 
    description: 'Directory that holds Terraform code'
    required: true
  terraform_version: 
    description: 'Terraform Version'
    required: true
  PAT: 
    description: 'GitHub token for authentication'
    required: true
  pr_id:
    description: 'Pull request ID'
    required: true
  s3_bucket_name:
    description: 'S3 bucket ARN'
    required: true
  aws_access_key_id:
    description: 'AWS Access Key ID'
    required: true
  aws_secret_access_key:
    description: 'AWS Secret Access Key'
    required: true
  aws_region:
    description: 'AWS Region'
    required: true
  tf_var_env:
    description: 'Environment to apply for'
    required: true
  s3_key_date:
    description: 'Date for S3 key structure (YYYY/MM format)'
    required: false

runs:
  using: "composite"
  steps:
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.terraform_version }}
        terraform_wrapper: false

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: ${{ inputs.aws_region }}

    - name: Terraform Init
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      run: terraform init --backend-config="env/backend_s3_${{ inputs.tf_var_env }}.hcl"

    - name: Download Plan from S3
      shell: bash
      env:
        TF_VAR_env: ${{ inputs.tf_var_env }}
      run: |
        if [ -n "${{ inputs.s3_key_date }}" ]; then
          S3_KEY="${{ inputs.s3_key_date }}/${{ inputs.pr_id }}-${{ inputs.tf_var_env }}-tfplan"
        else
          S3_KEY="${{ inputs.pr_id }}-${{ inputs.tf_var_env }}-tfplan"
        fi
        aws s3 cp s3://${{ inputs.s3_bucket_name }}/$S3_KEY ${{ inputs.terraform_directory }}/tfplan

    - name: Terraform Apply
      id: apply
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      env:
        TF_VAR_env: ${{ inputs.tf_var_env }}
        TF_VAR_aws_access_key_id: ${{ inputs.aws_access_key_id }}
        TF_VAR_aws_secret_access_key: ${{ inputs.aws_secret_access_key }}
        TF_VAR_aws_region: ${{ inputs.aws_region }}
      run: |
        set -e
        terraform apply -input=false tfplan
